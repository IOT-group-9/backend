services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: app:${app_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_HOST: 0.0.0.0
      APP_DB_HOST: app-db
      APP_DB_PORT: 5432
      APP_DB_USER: app
      APP_DB_PASS: app
      APP_DB_BASE: app
    ports:
      # Exposes application port.
    - "8000:8000"
  db:
    image: postgres:16.3-bullseye
    hostname: app-db
    environment:
      POSTGRES_PASSWORD: "app"
      POSTGRES_USER: "app"
      POSTGRES_DB: "app"
    volumes:
      - app-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U app
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: app:${app_VERSION:-latest}
    restart: "no"
    command: piccolo migrations forwards all
    environment:
      app_DB_HOST: app-db
      app_DB_PORT: 5432
      app_DB_USER: app
      app_DB_PASS: app
      app_DB_BASE: app
      PICCOLO_CONF: "app.piccolo_conf"
    depends_on:
      db:
        condition: service_healthy



volumes:
  app-db-data:
    name: app-db-data
